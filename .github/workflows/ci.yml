name: Node.js CI

env:
  REGISTRY: ghcr.io
  NODE_ALPINE_VERSION: 18-alpine3.16
  ALPINE_VERSION: 3.17

on:
  push:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.repository == 'creadigme/github-backup' && github.event_name == 'push' && github.ref == 'refs/heads/main'

    # strategy:
    #   matrix:
    #     node-version: [16.x, 17.x]

    steps:
    - uses: actions/checkout@v3
    # - name: Use Node.js ${{ matrix.node-version }}
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        registry-url: 'https://npm.pkg.github.com'
        # Defaults to the user or organization that owns the workflow file
        scope: '@creadigme'

    - name: Install dependencies
      env:
        CI: true
      run: yarn

    - name: Build
      run: yarn build

    # Log to the container registry
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    # Recover metadata
    - name: Extract metadata (tags, labels) for Docker
      id: metaNode
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/creadigme/github-backup

    - name: Build and push Docker (node) image
      uses: docker/build-push-action@v3
      with:
        context: ./
        file: Dockerfile
        push: true
        tags: ${{ steps.metaNode.outputs.tags }}
        labels: ${{ steps.metaNode.outputs.labels }}
        build-args: |
          NODE_ALPINE_VERSION=${{ env.NODE_ALPINE_VERSION }}

    - name: Extract metadata (tags, labels) for Docker
      id: metaSh
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/creadigme/github-backup-sh

    - name: Build and push Docker (sh) image
      uses: docker/build-push-action@v3
      with:
        context: ./
        file: Dockerfile-sh
        push: true
        tags: ${{ steps.metaSh.outputs.tags }}
        labels: ${{ steps.metaSh.outputs.labels }}
        build-args: |
          ALPINE_VERSION=${{ env.ALPINE_VERSION }}

  build_fork:
    runs-on: ubuntu-latest
    if: github.repository != 'creadigme/github-backup' && github.event_name == 'push' && github.ref == 'refs/heads/main'

    # strategy:
    #   matrix:
    #     node-version: [16.x, 17.x]

    steps:
    - uses: actions/checkout@v3
    # - name: Use Node.js ${{ matrix.node-version }}
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        registry-url: 'https://npm.pkg.github.com'
        # Defaults to the user or organization that owns the workflow file
        scope: '@creadigme'

    - name: Install dependencies
      env:
        CI: true
      run: yarn

    - name: Build
      run: yarn build

    # Log to the container registry
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    # Recover metadata
    - name: Extract metadata (tags, labels) for Docker
      id: metaNode
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/creadigme/github-backup

    - name: Build and push Docker (node) image
      uses: docker/build-push-action@v3
      with:
        context: ./
        file: Dockerfile
        push: false
        tags: ${{ steps.metaNode.outputs.tags }}
        labels: ${{ steps.metaNode.outputs.labels }}
        build-args: |
          NODE_ALPINE_VERSION=${{ env.NODE_ALPINE_VERSION }}

    - name: Extract metadata (tags, labels) for Docker
      id: metaSh
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/creadigme/github-backup-sh

    - name: Build and push Docker (sh) image
      uses: docker/build-push-action@v3
      with:
        context: ./
        file: Dockerfile-sh
        push: false
        tags: ${{ steps.metaSh.outputs.tags }}
        labels: ${{ steps.metaSh.outputs.labels }}
        build-args: |
          ALPINE_VERSION=${{ env.ALPINE_VERSION }}

  # Pull Request
  build_pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.ref != 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3
    # - name: Use Node.js ${{ matrix.node-version }}
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        registry-url: 'https://npm.pkg.github.com'
        # Defaults to the user or organization that owns the workflow file
        scope: '@creadigme'

    - name: Install dependencies
      env:
        CI: true
      run: yarn
    - name: Build
      run: yarn build

    # Recover metadata
    - name: Extract metadata (tags, labels) for Docker
      id: metaNode
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/creadigme/github-backup

    - name: Build and push Docker (node) image
      uses: docker/build-push-action@v3
      with:
        context: ./
        file: Dockerfile
        push: false
        tags: ${{ steps.metaNode.outputs.tags }}
        labels: ${{ steps.metaNode.outputs.labels }}
        build-args: |
          NODE_ALPINE_VERSION=${{ env.NODE_ALPINE_VERSION }}

    - name: Extract metadata (tags, labels) for Docker
      id: metaSh
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/creadigme/github-backup-sh

    - name: Build and push Docker (sh) image
      uses: docker/build-push-action@v3
      with:
        context: ./
        file: Dockerfile-sh
        push: false
        tags: ${{ steps.metaSh.outputs.tags }}
        labels: ${{ steps.metaSh.outputs.labels }}
        build-args: |
          ALPINE_VERSION=${{ env.ALPINE_VERSION }}